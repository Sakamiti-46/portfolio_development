【レッスンメモ】
Vue.jsだと生のJSを打つため役に立つよ
情報収集→「こうすれば実装できるのでは（仮説）→実装してみる→ダメなら仮説立て直す→実装→繰り返し

★見た目の調整★
scssで個別に記述すること
@import bootstrap(application.js)の下にrecords.scssなどと記述する

★注意点★
    <%= stylesheet_link_tag    'application', media: 'all'%>
    <%= javascript_include_tag 'application' %>

「CSSが反映されない」という問題に直面する
→layoutsが正しく設定されているかも確認しよう。

Vue.js,Reactは、SPAに適したJSライブラリ
SPA：画面遷移せずデータを後ろから撮ってきて変更された部分だけ差し替えるような創り
remote:true
→非同期通信を行うオプションなのだが、、、

まず、普通に記述したら「HTMLを返す」仕様になっている。
非同期通信するには、「JSON形式を返す」仕様になるよう、実装する必要がある。

S3：画像・ファイルを保管できるストレージ
→何万枚もの画像をファイルに直して、あるループで分類して手元でフォルダごとに分ける。
→それをクライアントに送る

分解：
①AWSから手元に置く
②そのファイルがどこに分類されるかループ処理（このルールにあってるのか？そうでないか？）する
③フォルダの名前を付け直して1つにまとめて送る
「こうすれば〜〜できるんじゃないか？」

管理者かどうかを判別するカラムをUserに追加するイメージ
User
→e-mailなど
→adminを新しく設定する
→ログイン

【レッスン】
ページネーション（kaminari）
登録画面の見た目調整（bootstrap）
詳細画面の見た目調整（bootstrap）
詳細画面と同じ見た目で編集画面の見た目調整
※ここにAjaxを活用

【残り実装するもの】
登録画面の見た目調整
詳細画面の見た目調整
詳細画面と同じ見た目で編集画面の見た目調整
※ここにAjaxを活用
管理者権限機能←いる？
index画面の「総練習時間」を、登録した練習時間の合計を表示させる
index画面からの検索機能（ransack）
index含め背景画面の実装
レポート表示（DBから値を取り出しchart.jsで表示）
cronによる日時指定のメール送信
→Heroku上でcronを動かすところまでかな。メールを送信するための処理を作る。それをうまく動かせるか。メール送信は、Rails。cronは「この時間になったら処理Xを動かして」。
→「11時になったらRailsのXを動かして」

一般論では、転職活動が厳しい環境